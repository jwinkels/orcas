apply plugin: 'java'

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies 
{
  compile 'junit:junit:4.12'
  compile group: 'com.opitzconsulting.orcas', name: 'orcas-main-extensionhandler',
                  version: '5.8.3'

  compile "com.oracle:ojdbc6:11.1.0.7"

/*
  you need to provide the oracle jdbc driver here.
  please make sure you find a way that works with the oracle license terms

  you can install it to your local maven-repository:
  mvn install:install-file "-Dfile=C:\oracle\product\11.1.0\client_32\jdbc\lib\ojdbc6.jar" -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.1.0.7 -Dpackaging=jar
 
  you can also provide a direct path to it:
  classpath files('C:\oracle\product\11.1.0\client_32\jdbc\lib\ojdbc6.jar')

  the driver is also accessible via http://maven.oracle.com, note that this requires a login-configuration
*/
}


test.outputs.upToDateWhen { false }

test {
    loadPropertyFile( "../../distribution/custom.properties", project );
    loadPropertyFile( "../../custom.properties", project );
    loadPropertyFile( "distribution/default_location.properties", project );

    println "--- location: ${project.location} ---"

    loadPropertyFile( "../../distribution/integrationstest/${project.location}/location.properties", project );
    loadPropertyFile( "../../distribution/${project.location}/location.properties", project );
    loadPropertyFile( "distribution/${project.location}/location.properties", project );
    loadPropertyFile( "distribution/default.properties", project );

    systemProperty "orcas.integrationtest.workfolder",                   "" + buildDir + "/gradle_tests/"

    systemProperty "orcas.integrationtest.with_second_run_empty_test",   with_second_run_empty_test
    systemProperty "orcas.integrationtest.with_run_with_spool_test",     with_run_with_spool_test
    systemProperty "orcas.integrationtest.with_run_with_extract_test",   with_run_with_extract_test
    systemProperty "orcas.integrationtest.execute_tests",                execute_tests

    systemProperty "orcas.integrationtest.available_feature_list",       available_feature_list
    systemProperty "orcas.integrationtest.jdbc_url",                     "jdbc:oracle:thin:@${jdbc_host}:${jdbc_port}:${jdbc_sid}"
    systemProperty "orcas.integrationtest.jdbc_user",                    username_dba
    systemProperty "orcas.integrationtest.jdbc_password",                password_dba
    systemProperty "orcas.integrationtest.alternate_tablespace_1",       alternate_tablespace_1
    systemProperty "orcas.integrationtest.alternate_tablespace_2",       alternate_tablespace_2

    systemProperty "junit.parallel.threads" ,                            parallel_threads

    testLogging {
        events "started", "skipped", "failed"
        exceptionFormat "full"
    }
}

def loadPropertyFile(String pFileName, Project pProject) {
    def lProperties = new Properties()
    def lFile = new File(pFileName)

    if( !lFile.exists() )
    {
      return
    }

    lProperties.load(new FileInputStream(lFile))

    lProperties.each 
    { 
      key, val ->

      if( !project.hasProperty(key) )
      {
        project.ext.set( key, val )
      }
    }
}






